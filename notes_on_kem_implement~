Here is the output of the KEM for a successful encaps, decaps process in dimension = 3.

❯ cd "/home/lowdon/Documents/tese/kem" && sage "kem.sage"
sampledmatrix
 [[-14, 14, -4], [6, 3, 15], [1, 8, -4]]
LLLreduced_sampledmatrix
 [   1 8 -4 ]
[ -15 6  0 ]
[   6 3 15 ]

PRIV/SECRET KEY, U
 [ -1  13 -14]
[ -5  16 -31]
[ -1   8 -10]
SECRET KEY DETERMINANT:  1
QUADRATIC FORM S: 
 [-143 -105   51]
[  44  -84  111]
[ -64   60  201]
PUBLIC KEY/QUADRATIC FORM P: 
 [ -1505    815  -6163]
[  8765 -24959  51967]
[-12483  22878 -63936]
ro  0.999999999999999
q  21
sample  (7368, -1140, -2652)
e vector:  [350.857142857143, -54.2857142857143, -126.285714285714]
c vector:
 [0.857142857142833, -0.285714285714285, -0.285714285714292]
encaps_symmetric_k:  ac8d39b0afe7611c6f9ff4a5a28d410cd23dcbc786f8a511ee74f9f37bb244e41594afe3a11594170d31423bd6300104734f3a8302149f5a7cff6287a28dd5bb
[[[0.857142857142833, -0.285714285714285, -0.285714285714292], 2], 'ac8d39b0afe7611c6f9ff4a5a28d410cd23dcbc786f8a511ee74f9f37bb244e41594afe3a11594170d31423bd6300104734f3a8302149f5a7cff6287a28dd5bb']
[0.000000000000000 0.000000000000000 0.000000000000000]  :::: Y VECTOR IS TYPE:  <class 'sage.matrix.matrix_generic_dense.Matrix_generic_dense'>
[0.000000000000000 0.000000000000000 0.000000000000000]  M1!
[  -0.571428571428449 3.26849658449646e-13   -0.285714285714192]  M2!
[    0.571428571428449 -3.26849658449646e-13     0.285714285714192]  RES!
SAMPLE Y IS CORRECT!
[ 0.857142857142833 -0.285714285714285 -0.285714285714292]  M1!
[0.000000000000000 0.000000000000000 0.000000000000000]  M2!
[ 0.857142857142833 -0.285714285714285 -0.285714285714292]  RES!
decaps_symmetric_k:  ac8d39b0afe7611c6f9ff4a5a28d410cd23dcbc786f8a511ee74f9f37bb244e41594afe3a11594170d31423bd6300104734f3a8302149f5a7cff6287a28dd5bb
is encaps_symmetric_k equal to decaps_symmetric_k?:  True



THERE IS A BUG ON THE CODE! inputs on extractor(c, Z) lead to a successfull decryption, but we should be sending extractor(c - (U^-1)y) for the correct decaps!


---
Notas 10/feb


O encaps foi mudado para o vetor "c" ser as diferenças do vetor "e" aos inteiros mais próximos de modo a que (c - e) seja um vetor de inteiros. 
TODO: antigamente estava a conseguir decifrar com o c no extractor. agora tenho de conseguir decifrar com o (c-e). ver disto!

------

Notas 11/feb
TODO: REMOVER U_times_c do Encaps! Não há acesso ao U no Encaps!!!

CONTINUAR A PROGRAMAR NO clean_kem.sage e não no kem.sage!


-------

Notas 17 feb

Successful run of KEM! Here is the output:

Retrying...



BEGIN KEYGEN::::

sampledmatrix
 [[-3, -1], [-3, -4]]
LLLreduced_sampledmatrix
 [  0 -3 ]
[ -3 -1 ]

PRIV/SECRET KEY, U
 [11 13]
[ 5  6]
SECRET KEY DETERMINANT:  1
QUADRATIC FORM S: 
 [-6  7]
[ 9  3]
PUBLIC KEY/QUADRATIC FORM P: 
 [-9  0]
[ 1  9]



BEGIN ENCAPS::::

ro  0.999999999999999
q  7
sample  (9, 0)
e vector:  [9, 0]
c vector :::  [2, 0]
inputs: vec_e, rand_z :::  [2, 0] 3
encaps_symmetric_k:  06df05371981a237d0ed11472fae7c94c9ac0eff1d05413516710d17b10a4fb6f4517bda4a695f02d0a73dd4db543b4653df28f5d09dab86f92ffb9b86d01e25
((c, Z), k) ::::  [[[2, 0], 3], '06df05371981a237d0ed11472fae7c94c9ac0eff1d05413516710d17b10a4fb6f4517bda4a695f02d0a73dd4db543b4653df28f5d09dab86f92ffb9b86d01e25']



BEGIN DECAPS::::

inputs: secret_key = U =
 [11 13]
[ 5  6] 
; encaps_ciphertext = (c := (c, Z) :  [[2, 0], 3] 

y sample at decode:  (0, 0)
[0]
[0]  M1!
[22]
[10]  M2!
[-22]
[-10]  RES!
quad_norm of sample :   2*sqrt(229)
first minimum of S:  9223372036854775807
GOOD SAMPLE, SAMPLE:  (0, 0)
[2 0]  M1!
[0 0]  M2!
[2 0]  RES!
c_minus_Uy_list :::::  [2, 0]
inputs: vec_e, rand_z :::  [2, 0] 3
decaps_symmetric_k:  06df05371981a237d0ed11472fae7c94c9ac0eff1d05413516710d17b10a4fb6f4517bda4a695f02d0a73dd4db543b4653df28f5d09dab86f92ffb9b86d01e25
is encaps_symmetric_k equal to decaps_symmetric_k?:  True



Issues: should we sample vectors at decode time?
our discrete sampler has to sample a vector such that 


---------------------



TODO 24/feb:

Fazer:
1) plano/índice para o novo texto da tese

2) escrever na tese

Estudar: 
0) estudar o decoder do micciancio e instanciar o nosso KEM com barnes wall. some info on decoders here? https://github.com/olapiha/bounded_distance_decoding/blob/master/report.pdf

1) ler https://cseweb.ucsd.edu/~daniele/papers/PostQuantum.pdf chaps 5 (on pub key crypto for lattices (has details on efficiency of schemes, security proofs, detailed analysis of schemes))

2) rever lattice theory: resolver estes exercícios https://cseweb.ucsd.edu/~daniele/papers/FOSAD11.pdf


RESUMO DO QUE TENHO A FAZER: 

1)comprometo-me hoje a: passar lemmas e teoremas do decoders for general lattices para o caderno e entender.

continuar a ver video do micciancio, 
estudar paper do decoder, 
mudar código p/ instanciar barnes wall, 
implementar decoder, 
testar, tirar notas, 
escrever tese
